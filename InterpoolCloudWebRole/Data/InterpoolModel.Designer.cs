//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("InterpoolModel", "GameSuspect", "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InterpoolCloudWebRole.Data.Game), "Suspect", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InterpoolCloudWebRole.Data.Suspect))]
[assembly: EdmRelationshipAttribute("InterpoolModel", "GameNodePath", "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InterpoolCloudWebRole.Data.Game), "NodePath", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InterpoolCloudWebRole.Data.NodePath))]
[assembly: EdmRelationshipAttribute("InterpoolModel", "NodePathFamous", "NodePath", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InterpoolCloudWebRole.Data.NodePath), "Famous", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InterpoolCloudWebRole.Data.Famous))]
[assembly: EdmRelationshipAttribute("InterpoolModel", "CityFamous", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InterpoolCloudWebRole.Data.City), "Famous", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InterpoolCloudWebRole.Data.Famous))]
[assembly: EdmRelationshipAttribute("InterpoolModel", "FamousNew", "Famous", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InterpoolCloudWebRole.Data.Famous), "New", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InterpoolCloudWebRole.Data.New))]
[assembly: EdmRelationshipAttribute("InterpoolModel", "NodePathClue", "NodePath", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InterpoolCloudWebRole.Data.NodePath), "Clue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InterpoolCloudWebRole.Data.Clue))]
[assembly: EdmRelationshipAttribute("InterpoolModel", "ClueCity", "Clue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InterpoolCloudWebRole.Data.Clue), "City", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(InterpoolCloudWebRole.Data.City))]
[assembly: EdmRelationshipAttribute("InterpoolModel", "ClueFamous", "Clue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InterpoolCloudWebRole.Data.Clue), "Famous", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(InterpoolCloudWebRole.Data.Famous))]
[assembly: EdmRelationshipAttribute("InterpoolModel", "CityLevel", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InterpoolCloudWebRole.Data.City), "Level", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InterpoolCloudWebRole.Data.Level))]
[assembly: EdmRelationshipAttribute("InterpoolModel", "NodePathCity", "NodePath", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InterpoolCloudWebRole.Data.NodePath), "City", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InterpoolCloudWebRole.Data.City))]
[assembly: EdmRelationshipAttribute("InterpoolModel", "GameSuspect1", "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(InterpoolCloudWebRole.Data.Game), "Suspect", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(InterpoolCloudWebRole.Data.Suspect))]
[assembly: EdmRelationshipAttribute("InterpoolModel", "UserGame", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InterpoolCloudWebRole.Data.User), "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(InterpoolCloudWebRole.Data.Game))]
[assembly: EdmRelationshipAttribute("InterpoolModel", "CityCityProperty", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InterpoolCloudWebRole.Data.City), "CityProperty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InterpoolCloudWebRole.Data.CityProperty))]
[assembly: EdmRelationshipAttribute("InterpoolModel", "NodePathCity1", "NodePath", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InterpoolCloudWebRole.Data.NodePath), "City", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InterpoolCloudWebRole.Data.City))]
[assembly: EdmRelationshipAttribute("InterpoolModel", "GameOrderOfArrest", "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InterpoolCloudWebRole.Data.Game), "OrderOfArrest", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(InterpoolCloudWebRole.Data.OrderOfArrest))]
[assembly: EdmRelationshipAttribute("InterpoolModel", "OrderOfArrestSuspect", "OrderOfArrest", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(InterpoolCloudWebRole.Data.OrderOfArrest), "Suspect", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InterpoolCloudWebRole.Data.Suspect))]
[assembly: EdmRelationshipAttribute("InterpoolModel", "UserLevel", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InterpoolCloudWebRole.Data.User), "Level", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InterpoolCloudWebRole.Data.Level), true)]

#endregion

namespace InterpoolCloudWebRole.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class InterpoolContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new InterpoolContainer object using the connection string found in the 'InterpoolContainer' section of the application configuration file.
        /// </summary>
        public InterpoolContainer() : base("name=InterpoolContainer", "InterpoolContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new InterpoolContainer object.
        /// </summary>
        public InterpoolContainer(string connectionString) : base(connectionString, "InterpoolContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new InterpoolContainer object.
        /// </summary>
        public InterpoolContainer(EntityConnection connection) : base(connection, "InterpoolContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Game> Games
        {
            get
            {
                if ((_Games == null))
                {
                    _Games = base.CreateObjectSet<Game>("Games");
                }
                return _Games;
            }
        }
        private ObjectSet<Game> _Games;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NodePath> NodePaths
        {
            get
            {
                if ((_NodePaths == null))
                {
                    _NodePaths = base.CreateObjectSet<NodePath>("NodePaths");
                }
                return _NodePaths;
            }
        }
        private ObjectSet<NodePath> _NodePaths;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<City> Cities
        {
            get
            {
                if ((_Cities == null))
                {
                    _Cities = base.CreateObjectSet<City>("Cities");
                }
                return _Cities;
            }
        }
        private ObjectSet<City> _Cities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Famous> Famous
        {
            get
            {
                if ((_Famous == null))
                {
                    _Famous = base.CreateObjectSet<Famous>("Famous");
                }
                return _Famous;
            }
        }
        private ObjectSet<Famous> _Famous;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<New> News
        {
            get
            {
                if ((_News == null))
                {
                    _News = base.CreateObjectSet<New>("News");
                }
                return _News;
            }
        }
        private ObjectSet<New> _News;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Clue> Clues
        {
            get
            {
                if ((_Clues == null))
                {
                    _Clues = base.CreateObjectSet<Clue>("Clues");
                }
                return _Clues;
            }
        }
        private ObjectSet<Clue> _Clues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Suspect> Suspects
        {
            get
            {
                if ((_Suspects == null))
                {
                    _Suspects = base.CreateObjectSet<Suspect>("Suspects");
                }
                return _Suspects;
            }
        }
        private ObjectSet<Suspect> _Suspects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Level> Levels
        {
            get
            {
                if ((_Levels == null))
                {
                    _Levels = base.CreateObjectSet<Level>("Levels");
                }
                return _Levels;
            }
        }
        private ObjectSet<Level> _Levels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CityProperty> CityPropertySet
        {
            get
            {
                if ((_CityPropertySet == null))
                {
                    _CityPropertySet = base.CreateObjectSet<CityProperty>("CityPropertySet");
                }
                return _CityPropertySet;
            }
        }
        private ObjectSet<CityProperty> _CityPropertySet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Parameter> Parameters
        {
            get
            {
                if ((_Parameters == null))
                {
                    _Parameters = base.CreateObjectSet<Parameter>("Parameters");
                }
                return _Parameters;
            }
        }
        private ObjectSet<Parameter> _Parameters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Log> Logs
        {
            get
            {
                if ((_Logs == null))
                {
                    _Logs = base.CreateObjectSet<Log>("Logs");
                }
                return _Logs;
            }
        }
        private ObjectSet<Log> _Logs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderOfArrest> OrdersOfArrest
        {
            get
            {
                if ((_OrdersOfArrest == null))
                {
                    _OrdersOfArrest = base.CreateObjectSet<OrderOfArrest>("OrdersOfArrest");
                }
                return _OrdersOfArrest;
            }
        }
        private ObjectSet<OrderOfArrest> _OrdersOfArrest;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Games EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGames(Game game)
        {
            base.AddObject("Games", game);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NodePaths EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNodePaths(NodePath nodePath)
        {
            base.AddObject("NodePaths", nodePath);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCities(City city)
        {
            base.AddObject("Cities", city);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Famous EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFamous(Famous famous)
        {
            base.AddObject("Famous", famous);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the News EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNews(New @new)
        {
            base.AddObject("News", @new);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClues(Clue clue)
        {
            base.AddObject("Clues", clue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Suspects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSuspects(Suspect suspect)
        {
            base.AddObject("Suspects", suspect);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Levels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLevels(Level level)
        {
            base.AddObject("Levels", level);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CityPropertySet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCityPropertySet(CityProperty cityProperty)
        {
            base.AddObject("CityPropertySet", cityProperty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Parameters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParameters(Parameter parameter)
        {
            base.AddObject("Parameters", parameter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Logs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogs(Log log)
        {
            base.AddObject("Logs", log);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrdersOfArrest EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrdersOfArrest(OrderOfArrest orderOfArrest)
        {
            base.AddObject("OrdersOfArrest", orderOfArrest);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InterpoolModel", Name="City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class City : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new City object.
        /// </summary>
        /// <param name="cityId">Initial value of the CityId property.</param>
        /// <param name="cityName">Initial value of the CityName property.</param>
        /// <param name="cityCountry">Initial value of the CityCountry property.</param>
        /// <param name="cityNumber">Initial value of the CityNumber property.</param>
        /// <param name="longitud">Initial value of the Longitud property.</param>
        /// <param name="latitud">Initial value of the Latitud property.</param>
        public static City CreateCity(global::System.Int32 cityId, global::System.String cityName, global::System.String cityCountry, global::System.Int32 cityNumber, global::System.Int32 longitud, global::System.Int32 latitud)
        {
            City city = new City();
            city.CityId = cityId;
            city.CityName = cityName;
            city.CityCountry = cityCountry;
            city.CityNumber = cityNumber;
            city.Longitud = longitud;
            city.Latitud = latitud;
            return city;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                if (_CityId != value)
                {
                    OnCityIdChanging(value);
                    ReportPropertyChanging("CityId");
                    _CityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CityId");
                    OnCityIdChanged();
                }
            }
        }
        private global::System.Int32 _CityId;
        partial void OnCityIdChanging(global::System.Int32 value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CityName
        {
            get
            {
                return _CityName;
            }
            set
            {
                OnCityNameChanging(value);
                ReportPropertyChanging("CityName");
                _CityName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CityName");
                OnCityNameChanged();
            }
        }
        private global::System.String _CityName;
        partial void OnCityNameChanging(global::System.String value);
        partial void OnCityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CityCountry
        {
            get
            {
                return _CityCountry;
            }
            set
            {
                OnCityCountryChanging(value);
                ReportPropertyChanging("CityCountry");
                _CityCountry = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CityCountry");
                OnCityCountryChanged();
            }
        }
        private global::System.String _CityCountry;
        partial void OnCityCountryChanging(global::System.String value);
        partial void OnCityCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityNumber
        {
            get
            {
                return _CityNumber;
            }
            set
            {
                OnCityNumberChanging(value);
                ReportPropertyChanging("CityNumber");
                _CityNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityNumber");
                OnCityNumberChanged();
            }
        }
        private global::System.Int32 _CityNumber;
        partial void OnCityNumberChanging(global::System.Int32 value);
        partial void OnCityNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Longitud
        {
            get
            {
                return _Longitud;
            }
            set
            {
                OnLongitudChanging(value);
                ReportPropertyChanging("Longitud");
                _Longitud = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitud");
                OnLongitudChanged();
            }
        }
        private global::System.Int32 _Longitud;
        partial void OnLongitudChanging(global::System.Int32 value);
        partial void OnLongitudChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Latitud
        {
            get
            {
                return _Latitud;
            }
            set
            {
                OnLatitudChanging(value);
                ReportPropertyChanging("Latitud");
                _Latitud = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitud");
                OnLatitudChanged();
            }
        }
        private global::System.Int32 _Latitud;
        partial void OnLatitudChanging(global::System.Int32 value);
        partial void OnLatitudChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameFile
        {
            get
            {
                return _NameFile;
            }
            set
            {
                OnNameFileChanging(value);
                ReportPropertyChanging("NameFile");
                _NameFile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NameFile");
                OnNameFileChanged();
            }
        }
        private global::System.String _NameFile;
        partial void OnNameFileChanging(global::System.String value);
        partial void OnNameFileChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "CityFamous", "Famous")]
        public EntityCollection<Famous> Famous
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Famous>("InterpoolModel.CityFamous", "Famous");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Famous>("InterpoolModel.CityFamous", "Famous", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "ClueCity", "Clue")]
        public EntityCollection<Clue> Clue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Clue>("InterpoolModel.ClueCity", "Clue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Clue>("InterpoolModel.ClueCity", "Clue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "CityLevel", "Level")]
        public Level Level
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Level>("InterpoolModel.CityLevel", "Level").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Level>("InterpoolModel.CityLevel", "Level").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Level> LevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Level>("InterpoolModel.CityLevel", "Level");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Level>("InterpoolModel.CityLevel", "Level", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "NodePathCity", "NodePath")]
        public EntityCollection<NodePath> NodePath
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NodePath>("InterpoolModel.NodePathCity", "NodePath");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NodePath>("InterpoolModel.NodePathCity", "NodePath", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "CityCityProperty", "CityProperty")]
        public EntityCollection<CityProperty> CityProperty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CityProperty>("InterpoolModel.CityCityProperty", "CityProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CityProperty>("InterpoolModel.CityCityProperty", "CityProperty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "NodePathCity1", "NodePath")]
        public EntityCollection<NodePath> NodePath_1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NodePath>("InterpoolModel.NodePathCity1", "NodePath");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NodePath>("InterpoolModel.NodePathCity1", "NodePath", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InterpoolModel", Name="CityProperty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CityProperty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CityProperty object.
        /// </summary>
        /// <param name="cityPropertyId">Initial value of the CityPropertyId property.</param>
        /// <param name="cityPropertyContent">Initial value of the CityPropertyContent property.</param>
        /// <param name="dyn">Initial value of the Dyn property.</param>
        public static CityProperty CreateCityProperty(global::System.Int32 cityPropertyId, global::System.String cityPropertyContent, global::System.Boolean dyn)
        {
            CityProperty cityProperty = new CityProperty();
            cityProperty.CityPropertyId = cityPropertyId;
            cityProperty.CityPropertyContent = cityPropertyContent;
            cityProperty.Dyn = dyn;
            return cityProperty;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityPropertyId
        {
            get
            {
                return _CityPropertyId;
            }
            set
            {
                if (_CityPropertyId != value)
                {
                    OnCityPropertyIdChanging(value);
                    ReportPropertyChanging("CityPropertyId");
                    _CityPropertyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CityPropertyId");
                    OnCityPropertyIdChanged();
                }
            }
        }
        private global::System.Int32 _CityPropertyId;
        partial void OnCityPropertyIdChanging(global::System.Int32 value);
        partial void OnCityPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CityPropertyContent
        {
            get
            {
                return _CityPropertyContent;
            }
            set
            {
                OnCityPropertyContentChanging(value);
                ReportPropertyChanging("CityPropertyContent");
                _CityPropertyContent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CityPropertyContent");
                OnCityPropertyContentChanged();
            }
        }
        private global::System.String _CityPropertyContent;
        partial void OnCityPropertyContentChanging(global::System.String value);
        partial void OnCityPropertyContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Dyn
        {
            get
            {
                return _Dyn;
            }
            set
            {
                OnDynChanging(value);
                ReportPropertyChanging("Dyn");
                _Dyn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Dyn");
                OnDynChanged();
            }
        }
        private global::System.Boolean _Dyn;
        partial void OnDynChanging(global::System.Boolean value);
        partial void OnDynChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "CityCityProperty", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("InterpoolModel.CityCityProperty", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("InterpoolModel.CityCityProperty", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("InterpoolModel.CityCityProperty", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("InterpoolModel.CityCityProperty", "City", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InterpoolModel", Name="Clue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Clue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Clue object.
        /// </summary>
        /// <param name="clueId">Initial value of the ClueId property.</param>
        /// <param name="clueContent">Initial value of the ClueContent property.</param>
        public static Clue CreateClue(global::System.Int32 clueId, global::System.String clueContent)
        {
            Clue clue = new Clue();
            clue.ClueId = clueId;
            clue.ClueContent = clueContent;
            return clue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClueId
        {
            get
            {
                return _ClueId;
            }
            set
            {
                if (_ClueId != value)
                {
                    OnClueIdChanging(value);
                    ReportPropertyChanging("ClueId");
                    _ClueId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClueId");
                    OnClueIdChanged();
                }
            }
        }
        private global::System.Int32 _ClueId;
        partial void OnClueIdChanging(global::System.Int32 value);
        partial void OnClueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClueContent
        {
            get
            {
                return _ClueContent;
            }
            set
            {
                OnClueContentChanging(value);
                ReportPropertyChanging("ClueContent");
                _ClueContent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClueContent");
                OnClueContentChanged();
            }
        }
        private global::System.String _ClueContent;
        partial void OnClueContentChanging(global::System.String value);
        partial void OnClueContentChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "NodePathClue", "NodePath")]
        public EntityCollection<NodePath> NodePath
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NodePath>("InterpoolModel.NodePathClue", "NodePath");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NodePath>("InterpoolModel.NodePathClue", "NodePath", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "ClueCity", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("InterpoolModel.ClueCity", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("InterpoolModel.ClueCity", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("InterpoolModel.ClueCity", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("InterpoolModel.ClueCity", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "ClueFamous", "Famous")]
        public Famous Famous
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Famous>("InterpoolModel.ClueFamous", "Famous").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Famous>("InterpoolModel.ClueFamous", "Famous").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Famous> FamousReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Famous>("InterpoolModel.ClueFamous", "Famous");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Famous>("InterpoolModel.ClueFamous", "Famous", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InterpoolModel", Name="Famous")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Famous : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Famous object.
        /// </summary>
        /// <param name="famousId">Initial value of the FamousId property.</param>
        /// <param name="famousName">Initial value of the FamousName property.</param>
        /// <param name="nameFileFamous">Initial value of the NameFileFamous property.</param>
        public static Famous CreateFamous(global::System.Int32 famousId, global::System.String famousName, global::System.String nameFileFamous)
        {
            Famous famous = new Famous();
            famous.FamousId = famousId;
            famous.FamousName = famousName;
            famous.NameFileFamous = nameFileFamous;
            return famous;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FamousId
        {
            get
            {
                return _FamousId;
            }
            set
            {
                if (_FamousId != value)
                {
                    OnFamousIdChanging(value);
                    ReportPropertyChanging("FamousId");
                    _FamousId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FamousId");
                    OnFamousIdChanged();
                }
            }
        }
        private global::System.Int32 _FamousId;
        partial void OnFamousIdChanging(global::System.Int32 value);
        partial void OnFamousIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FamousName
        {
            get
            {
                return _FamousName;
            }
            set
            {
                OnFamousNameChanging(value);
                ReportPropertyChanging("FamousName");
                _FamousName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FamousName");
                OnFamousNameChanged();
            }
        }
        private global::System.String _FamousName;
        partial void OnFamousNameChanging(global::System.String value);
        partial void OnFamousNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NameFileFamous
        {
            get
            {
                return _NameFileFamous;
            }
            set
            {
                OnNameFileFamousChanging(value);
                ReportPropertyChanging("NameFileFamous");
                _NameFileFamous = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NameFileFamous");
                OnNameFileFamousChanged();
            }
        }
        private global::System.String _NameFileFamous;
        partial void OnNameFileFamousChanging(global::System.String value);
        partial void OnNameFileFamousChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "NodePathFamous", "NodePath")]
        public EntityCollection<NodePath> NodePath
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NodePath>("InterpoolModel.NodePathFamous", "NodePath");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NodePath>("InterpoolModel.NodePathFamous", "NodePath", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "CityFamous", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("InterpoolModel.CityFamous", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("InterpoolModel.CityFamous", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("InterpoolModel.CityFamous", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("InterpoolModel.CityFamous", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "FamousNew", "New")]
        public EntityCollection<New> New
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<New>("InterpoolModel.FamousNew", "New");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<New>("InterpoolModel.FamousNew", "New", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "ClueFamous", "Clue")]
        public EntityCollection<Clue> Clue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Clue>("InterpoolModel.ClueFamous", "Clue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Clue>("InterpoolModel.ClueFamous", "Clue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InterpoolModel", Name="Game")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Game : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Game object.
        /// </summary>
        /// <param name="gameId">Initial value of the GameId property.</param>
        /// <param name="gameTime">Initial value of the GameTime property.</param>
        public static Game CreateGame(global::System.Int32 gameId, global::System.Int16 gameTime)
        {
            Game game = new Game();
            game.GameId = gameId;
            game.GameTime = gameTime;
            return game;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GameId
        {
            get
            {
                return _GameId;
            }
            set
            {
                if (_GameId != value)
                {
                    OnGameIdChanging(value);
                    ReportPropertyChanging("GameId");
                    _GameId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GameId");
                    OnGameIdChanged();
                }
            }
        }
        private global::System.Int32 _GameId;
        partial void OnGameIdChanging(global::System.Int32 value);
        partial void OnGameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 GameTime
        {
            get
            {
                return _GameTime;
            }
            set
            {
                OnGameTimeChanging(value);
                ReportPropertyChanging("GameTime");
                _GameTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GameTime");
                OnGameTimeChanged();
            }
        }
        private global::System.Int16 _GameTime;
        partial void OnGameTimeChanging(global::System.Int16 value);
        partial void OnGameTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "GameSuspect", "Suspect")]
        public EntityCollection<Suspect> PossibleSuspect
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Suspect>("InterpoolModel.GameSuspect", "Suspect");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Suspect>("InterpoolModel.GameSuspect", "Suspect", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "GameNodePath", "NodePath")]
        public EntityCollection<NodePath> NodePath
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NodePath>("InterpoolModel.GameNodePath", "NodePath");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NodePath>("InterpoolModel.GameNodePath", "NodePath", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "GameSuspect1", "Suspect")]
        public Suspect Suspect
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Suspect>("InterpoolModel.GameSuspect1", "Suspect").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Suspect>("InterpoolModel.GameSuspect1", "Suspect").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Suspect> SuspectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Suspect>("InterpoolModel.GameSuspect1", "Suspect");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Suspect>("InterpoolModel.GameSuspect1", "Suspect", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "UserGame", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("InterpoolModel.UserGame", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("InterpoolModel.UserGame", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("InterpoolModel.UserGame", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("InterpoolModel.UserGame", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "GameOrderOfArrest", "OrderOfArrest")]
        public OrderOfArrest OrderOfArrest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderOfArrest>("InterpoolModel.GameOrderOfArrest", "OrderOfArrest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderOfArrest>("InterpoolModel.GameOrderOfArrest", "OrderOfArrest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrderOfArrest> OrderOfArrestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderOfArrest>("InterpoolModel.GameOrderOfArrest", "OrderOfArrest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrderOfArrest>("InterpoolModel.GameOrderOfArrest", "OrderOfArrest", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InterpoolModel", Name="Level")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Level : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Level object.
        /// </summary>
        /// <param name="levelId">Initial value of the LevelId property.</param>
        /// <param name="levelName">Initial value of the LevelName property.</param>
        /// <param name="groupFacebookId">Initial value of the GroupFacebookId property.</param>
        /// <param name="levelNumber">Initial value of the LevelNumber property.</param>
        public static Level CreateLevel(global::System.Int32 levelId, global::System.String levelName, global::System.String groupFacebookId, global::System.Int32 levelNumber)
        {
            Level level = new Level();
            level.LevelId = levelId;
            level.LevelName = levelName;
            level.GroupFacebookId = groupFacebookId;
            level.LevelNumber = levelNumber;
            return level;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LevelId
        {
            get
            {
                return _LevelId;
            }
            set
            {
                if (_LevelId != value)
                {
                    OnLevelIdChanging(value);
                    ReportPropertyChanging("LevelId");
                    _LevelId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LevelId");
                    OnLevelIdChanged();
                }
            }
        }
        private global::System.Int32 _LevelId;
        partial void OnLevelIdChanging(global::System.Int32 value);
        partial void OnLevelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LevelName
        {
            get
            {
                return _LevelName;
            }
            set
            {
                OnLevelNameChanging(value);
                ReportPropertyChanging("LevelName");
                _LevelName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LevelName");
                OnLevelNameChanged();
            }
        }
        private global::System.String _LevelName;
        partial void OnLevelNameChanging(global::System.String value);
        partial void OnLevelNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GroupFacebookId
        {
            get
            {
                return _GroupFacebookId;
            }
            set
            {
                OnGroupFacebookIdChanging(value);
                ReportPropertyChanging("GroupFacebookId");
                _GroupFacebookId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GroupFacebookId");
                OnGroupFacebookIdChanged();
            }
        }
        private global::System.String _GroupFacebookId;
        partial void OnGroupFacebookIdChanging(global::System.String value);
        partial void OnGroupFacebookIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LevelNumber
        {
            get
            {
                return _LevelNumber;
            }
            set
            {
                OnLevelNumberChanging(value);
                ReportPropertyChanging("LevelNumber");
                _LevelNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelNumber");
                OnLevelNumberChanged();
            }
        }
        private global::System.Int32 _LevelNumber;
        partial void OnLevelNumberChanging(global::System.Int32 value);
        partial void OnLevelNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "CityLevel", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("InterpoolModel.CityLevel", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("InterpoolModel.CityLevel", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("InterpoolModel.CityLevel", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("InterpoolModel.CityLevel", "City", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InterpoolModel", Name="Log")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Log : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Log object.
        /// </summary>
        /// <param name="logId">Initial value of the LogId property.</param>
        /// <param name="logName">Initial value of the LogName property.</param>
        /// <param name="logType">Initial value of the LogType property.</param>
        /// <param name="logStackTrace">Initial value of the LogStackTrace property.</param>
        public static Log CreateLog(global::System.Int32 logId, global::System.String logName, global::System.String logType, global::System.String logStackTrace)
        {
            Log log = new Log();
            log.LogId = logId;
            log.LogName = logName;
            log.LogType = logType;
            log.LogStackTrace = logStackTrace;
            return log;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogId
        {
            get
            {
                return _LogId;
            }
            set
            {
                if (_LogId != value)
                {
                    OnLogIdChanging(value);
                    ReportPropertyChanging("LogId");
                    _LogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LogId");
                    OnLogIdChanged();
                }
            }
        }
        private global::System.Int32 _LogId;
        partial void OnLogIdChanging(global::System.Int32 value);
        partial void OnLogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LogName
        {
            get
            {
                return _LogName;
            }
            set
            {
                OnLogNameChanging(value);
                ReportPropertyChanging("LogName");
                _LogName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LogName");
                OnLogNameChanged();
            }
        }
        private global::System.String _LogName;
        partial void OnLogNameChanging(global::System.String value);
        partial void OnLogNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LogType
        {
            get
            {
                return _LogType;
            }
            set
            {
                OnLogTypeChanging(value);
                ReportPropertyChanging("LogType");
                _LogType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LogType");
                OnLogTypeChanged();
            }
        }
        private global::System.String _LogType;
        partial void OnLogTypeChanging(global::System.String value);
        partial void OnLogTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LogStackTrace
        {
            get
            {
                return _LogStackTrace;
            }
            set
            {
                OnLogStackTraceChanging(value);
                ReportPropertyChanging("LogStackTrace");
                _LogStackTrace = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LogStackTrace");
                OnLogStackTraceChanged();
            }
        }
        private global::System.String _LogStackTrace;
        partial void OnLogStackTraceChanging(global::System.String value);
        partial void OnLogStackTraceChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InterpoolModel", Name="New")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class New : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new New object.
        /// </summary>
        /// <param name="newId">Initial value of the NewId property.</param>
        /// <param name="newContent">Initial value of the NewContent property.</param>
        public static New CreateNew(global::System.Int32 newId, global::System.String newContent)
        {
            New @new = new New();
            @new.NewId = newId;
            @new.NewContent = newContent;
            return @new;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NewId
        {
            get
            {
                return _NewId;
            }
            set
            {
                if (_NewId != value)
                {
                    OnNewIdChanging(value);
                    ReportPropertyChanging("NewId");
                    _NewId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NewId");
                    OnNewIdChanged();
                }
            }
        }
        private global::System.Int32 _NewId;
        partial void OnNewIdChanging(global::System.Int32 value);
        partial void OnNewIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NewContent
        {
            get
            {
                return _NewContent;
            }
            set
            {
                OnNewContentChanging(value);
                ReportPropertyChanging("NewContent");
                _NewContent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NewContent");
                OnNewContentChanged();
            }
        }
        private global::System.String _NewContent;
        partial void OnNewContentChanging(global::System.String value);
        partial void OnNewContentChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "FamousNew", "Famous")]
        public Famous Famous
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Famous>("InterpoolModel.FamousNew", "Famous").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Famous>("InterpoolModel.FamousNew", "Famous").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Famous> FamousReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Famous>("InterpoolModel.FamousNew", "Famous");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Famous>("InterpoolModel.FamousNew", "Famous", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InterpoolModel", Name="NodePath")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NodePath : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NodePath object.
        /// </summary>
        /// <param name="nodePathId">Initial value of the NodePathId property.</param>
        /// <param name="nodePathOrder">Initial value of the NodePathOrder property.</param>
        /// <param name="nodePathCurrent">Initial value of the NodePathCurrent property.</param>
        public static NodePath CreateNodePath(global::System.Int32 nodePathId, global::System.Int32 nodePathOrder, global::System.Boolean nodePathCurrent)
        {
            NodePath nodePath = new NodePath();
            nodePath.NodePathId = nodePathId;
            nodePath.NodePathOrder = nodePathOrder;
            nodePath.NodePathCurrent = nodePathCurrent;
            return nodePath;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NodePathId
        {
            get
            {
                return _NodePathId;
            }
            set
            {
                if (_NodePathId != value)
                {
                    OnNodePathIdChanging(value);
                    ReportPropertyChanging("NodePathId");
                    _NodePathId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NodePathId");
                    OnNodePathIdChanged();
                }
            }
        }
        private global::System.Int32 _NodePathId;
        partial void OnNodePathIdChanging(global::System.Int32 value);
        partial void OnNodePathIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NodePathOrder
        {
            get
            {
                return _NodePathOrder;
            }
            set
            {
                OnNodePathOrderChanging(value);
                ReportPropertyChanging("NodePathOrder");
                _NodePathOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NodePathOrder");
                OnNodePathOrderChanged();
            }
        }
        private global::System.Int32 _NodePathOrder;
        partial void OnNodePathOrderChanging(global::System.Int32 value);
        partial void OnNodePathOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean NodePathCurrent
        {
            get
            {
                return _NodePathCurrent;
            }
            set
            {
                OnNodePathCurrentChanging(value);
                ReportPropertyChanging("NodePathCurrent");
                _NodePathCurrent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NodePathCurrent");
                OnNodePathCurrentChanged();
            }
        }
        private global::System.Boolean _NodePathCurrent;
        partial void OnNodePathCurrentChanging(global::System.Boolean value);
        partial void OnNodePathCurrentChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "GameNodePath", "Game")]
        public Game Game
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("InterpoolModel.GameNodePath", "Game").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("InterpoolModel.GameNodePath", "Game").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Game> GameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("InterpoolModel.GameNodePath", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Game>("InterpoolModel.GameNodePath", "Game", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "NodePathFamous", "Famous")]
        public EntityCollection<Famous> Famous
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Famous>("InterpoolModel.NodePathFamous", "Famous");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Famous>("InterpoolModel.NodePathFamous", "Famous", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "NodePathClue", "Clue")]
        public EntityCollection<Clue> Clue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Clue>("InterpoolModel.NodePathClue", "Clue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Clue>("InterpoolModel.NodePathClue", "Clue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "NodePathCity", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("InterpoolModel.NodePathCity", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("InterpoolModel.NodePathCity", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("InterpoolModel.NodePathCity", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("InterpoolModel.NodePathCity", "City", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "NodePathCity1", "City")]
        public EntityCollection<City> PossibleCities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<City>("InterpoolModel.NodePathCity1", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<City>("InterpoolModel.NodePathCity1", "City", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InterpoolModel", Name="OrderOfArrest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderOfArrest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderOfArrest object.
        /// </summary>
        /// <param name="orderOfArrestId">Initial value of the OrderOfArrestId property.</param>
        public static OrderOfArrest CreateOrderOfArrest(global::System.Int32 orderOfArrestId)
        {
            OrderOfArrest orderOfArrest = new OrderOfArrest();
            orderOfArrest.OrderOfArrestId = orderOfArrestId;
            return orderOfArrest;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderOfArrestId
        {
            get
            {
                return _OrderOfArrestId;
            }
            set
            {
                if (_OrderOfArrestId != value)
                {
                    OnOrderOfArrestIdChanging(value);
                    ReportPropertyChanging("OrderOfArrestId");
                    _OrderOfArrestId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderOfArrestId");
                    OnOrderOfArrestIdChanged();
                }
            }
        }
        private global::System.Int32 _OrderOfArrestId;
        partial void OnOrderOfArrestIdChanging(global::System.Int32 value);
        partial void OnOrderOfArrestIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "OrderOfArrestSuspect", "Suspect")]
        public Suspect Suspect
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Suspect>("InterpoolModel.OrderOfArrestSuspect", "Suspect").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Suspect>("InterpoolModel.OrderOfArrestSuspect", "Suspect").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Suspect> SuspectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Suspect>("InterpoolModel.OrderOfArrestSuspect", "Suspect");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Suspect>("InterpoolModel.OrderOfArrestSuspect", "Suspect", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InterpoolModel", Name="Parameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Parameter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Parameter object.
        /// </summary>
        /// <param name="parameterId">Initial value of the ParameterId property.</param>
        /// <param name="parameterName">Initial value of the ParameterName property.</param>
        /// <param name="parameterValue">Initial value of the ParameterValue property.</param>
        public static Parameter CreateParameter(global::System.Int32 parameterId, global::System.String parameterName, global::System.String parameterValue)
        {
            Parameter parameter = new Parameter();
            parameter.ParameterId = parameterId;
            parameter.ParameterName = parameterName;
            parameter.ParameterValue = parameterValue;
            return parameter;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParameterId
        {
            get
            {
                return _ParameterId;
            }
            set
            {
                if (_ParameterId != value)
                {
                    OnParameterIdChanging(value);
                    ReportPropertyChanging("ParameterId");
                    _ParameterId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ParameterId");
                    OnParameterIdChanged();
                }
            }
        }
        private global::System.Int32 _ParameterId;
        partial void OnParameterIdChanging(global::System.Int32 value);
        partial void OnParameterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ParameterName
        {
            get
            {
                return _ParameterName;
            }
            set
            {
                OnParameterNameChanging(value);
                ReportPropertyChanging("ParameterName");
                _ParameterName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ParameterName");
                OnParameterNameChanged();
            }
        }
        private global::System.String _ParameterName;
        partial void OnParameterNameChanging(global::System.String value);
        partial void OnParameterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ParameterValue
        {
            get
            {
                return _ParameterValue;
            }
            set
            {
                OnParameterValueChanging(value);
                ReportPropertyChanging("ParameterValue");
                _ParameterValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ParameterValue");
                OnParameterValueChanged();
            }
        }
        private global::System.String _ParameterValue;
        partial void OnParameterValueChanging(global::System.String value);
        partial void OnParameterValueChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InterpoolModel", Name="Suspect")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Suspect : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Suspect object.
        /// </summary>
        /// <param name="suspectId">Initial value of the SuspectId property.</param>
        /// <param name="suspectFirstName">Initial value of the SuspectFirstName property.</param>
        /// <param name="suspectFacebookId">Initial value of the SuspectFacebookId property.</param>
        public static Suspect CreateSuspect(global::System.Int32 suspectId, global::System.String suspectFirstName, global::System.String suspectFacebookId)
        {
            Suspect suspect = new Suspect();
            suspect.SuspectId = suspectId;
            suspect.SuspectFirstName = suspectFirstName;
            suspect.SuspectFacebookId = suspectFacebookId;
            return suspect;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SuspectId
        {
            get
            {
                return _SuspectId;
            }
            set
            {
                if (_SuspectId != value)
                {
                    OnSuspectIdChanging(value);
                    ReportPropertyChanging("SuspectId");
                    _SuspectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SuspectId");
                    OnSuspectIdChanged();
                }
            }
        }
        private global::System.Int32 _SuspectId;
        partial void OnSuspectIdChanging(global::System.Int32 value);
        partial void OnSuspectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SuspectFirstName
        {
            get
            {
                return _SuspectFirstName;
            }
            set
            {
                OnSuspectFirstNameChanging(value);
                ReportPropertyChanging("SuspectFirstName");
                _SuspectFirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SuspectFirstName");
                OnSuspectFirstNameChanged();
            }
        }
        private global::System.String _SuspectFirstName;
        partial void OnSuspectFirstNameChanging(global::System.String value);
        partial void OnSuspectFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SuspectMusic
        {
            get
            {
                return _SuspectMusic;
            }
            set
            {
                OnSuspectMusicChanging(value);
                ReportPropertyChanging("SuspectMusic");
                _SuspectMusic = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SuspectMusic");
                OnSuspectMusicChanged();
            }
        }
        private global::System.String _SuspectMusic;
        partial void OnSuspectMusicChanging(global::System.String value);
        partial void OnSuspectMusicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SuspectCinema
        {
            get
            {
                return _SuspectCinema;
            }
            set
            {
                OnSuspectCinemaChanging(value);
                ReportPropertyChanging("SuspectCinema");
                _SuspectCinema = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SuspectCinema");
                OnSuspectCinemaChanged();
            }
        }
        private global::System.String _SuspectCinema;
        partial void OnSuspectCinemaChanging(global::System.String value);
        partial void OnSuspectCinemaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SuspectFacebookId
        {
            get
            {
                return _SuspectFacebookId;
            }
            set
            {
                OnSuspectFacebookIdChanging(value);
                ReportPropertyChanging("SuspectFacebookId");
                _SuspectFacebookId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SuspectFacebookId");
                OnSuspectFacebookIdChanged();
            }
        }
        private global::System.String _SuspectFacebookId;
        partial void OnSuspectFacebookIdChanging(global::System.String value);
        partial void OnSuspectFacebookIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SuspectTelevision
        {
            get
            {
                return _SuspectTelevision;
            }
            set
            {
                OnSuspectTelevisionChanging(value);
                ReportPropertyChanging("SuspectTelevision");
                _SuspectTelevision = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SuspectTelevision");
                OnSuspectTelevisionChanged();
            }
        }
        private global::System.String _SuspectTelevision;
        partial void OnSuspectTelevisionChanging(global::System.String value);
        partial void OnSuspectTelevisionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SuspectHometown
        {
            get
            {
                return _SuspectHometown;
            }
            set
            {
                OnSuspectHometownChanging(value);
                ReportPropertyChanging("SuspectHometown");
                _SuspectHometown = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SuspectHometown");
                OnSuspectHometownChanged();
            }
        }
        private global::System.String _SuspectHometown;
        partial void OnSuspectHometownChanging(global::System.String value);
        partial void OnSuspectHometownChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SuspectBirthday
        {
            get
            {
                return _SuspectBirthday;
            }
            set
            {
                OnSuspectBirthdayChanging(value);
                ReportPropertyChanging("SuspectBirthday");
                _SuspectBirthday = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SuspectBirthday");
                OnSuspectBirthdayChanged();
            }
        }
        private global::System.String _SuspectBirthday;
        partial void OnSuspectBirthdayChanging(global::System.String value);
        partial void OnSuspectBirthdayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SuspectLastName
        {
            get
            {
                return _SuspectLastName;
            }
            set
            {
                OnSuspectLastNameChanging(value);
                ReportPropertyChanging("SuspectLastName");
                _SuspectLastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SuspectLastName");
                OnSuspectLastNameChanged();
            }
        }
        private global::System.String _SuspectLastName;
        partial void OnSuspectLastNameChanging(global::System.String value);
        partial void OnSuspectLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SuspectGender
        {
            get
            {
                return _SuspectGender;
            }
            set
            {
                OnSuspectGenderChanging(value);
                ReportPropertyChanging("SuspectGender");
                _SuspectGender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SuspectGender");
                OnSuspectGenderChanged();
            }
        }
        private global::System.String _SuspectGender;
        partial void OnSuspectGenderChanging(global::System.String value);
        partial void OnSuspectGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SuspectPicLInk
        {
            get
            {
                return _SuspectPicLInk;
            }
            set
            {
                OnSuspectPicLInkChanging(value);
                ReportPropertyChanging("SuspectPicLInk");
                _SuspectPicLInk = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SuspectPicLInk");
                OnSuspectPicLInkChanged();
            }
        }
        private global::System.String _SuspectPicLInk;
        partial void OnSuspectPicLInkChanging(global::System.String value);
        partial void OnSuspectPicLInkChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "GameSuspect", "Game")]
        public EntityCollection<Game> Game
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Game>("InterpoolModel.GameSuspect", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Game>("InterpoolModel.GameSuspect", "Game", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "GameSuspect1", "Game")]
        public Game Game_1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("InterpoolModel.GameSuspect1", "Game").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("InterpoolModel.GameSuspect1", "Game").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Game> Game_1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("InterpoolModel.GameSuspect1", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Game>("InterpoolModel.GameSuspect1", "Game", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InterpoolModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userIdFacebook">Initial value of the UserIdFacebook property.</param>
        /// <param name="userTokenFacebook">Initial value of the UserTokenFacebook property.</param>
        /// <param name="levelLevelId">Initial value of the LevelLevelId property.</param>
        public static User CreateUser(global::System.Int32 userId, global::System.String userIdFacebook, global::System.String userTokenFacebook, global::System.Int32 levelLevelId)
        {
            User user = new User();
            user.UserId = userId;
            user.UserIdFacebook = userIdFacebook;
            user.UserTokenFacebook = userTokenFacebook;
            user.LevelLevelId = levelLevelId;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserIdFacebook
        {
            get
            {
                return _UserIdFacebook;
            }
            set
            {
                OnUserIdFacebookChanging(value);
                ReportPropertyChanging("UserIdFacebook");
                _UserIdFacebook = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserIdFacebook");
                OnUserIdFacebookChanged();
            }
        }
        private global::System.String _UserIdFacebook;
        partial void OnUserIdFacebookChanging(global::System.String value);
        partial void OnUserIdFacebookChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserTokenFacebook
        {
            get
            {
                return _UserTokenFacebook;
            }
            set
            {
                OnUserTokenFacebookChanging(value);
                ReportPropertyChanging("UserTokenFacebook");
                _UserTokenFacebook = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserTokenFacebook");
                OnUserTokenFacebookChanged();
            }
        }
        private global::System.String _UserTokenFacebook;
        partial void OnUserTokenFacebookChanging(global::System.String value);
        partial void OnUserTokenFacebookChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubLevel
        {
            get
            {
                return _SubLevel;
            }
            set
            {
                OnSubLevelChanging(value);
                ReportPropertyChanging("SubLevel");
                _SubLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubLevel");
                OnSubLevelChanged();
            }
        }
        private Nullable<global::System.Int32> _SubLevel;
        partial void OnSubLevelChanging(Nullable<global::System.Int32> value);
        partial void OnSubLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LevelLevelId
        {
            get
            {
                return _LevelLevelId;
            }
            set
            {
                OnLevelLevelIdChanging(value);
                ReportPropertyChanging("LevelLevelId");
                _LevelLevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelLevelId");
                OnLevelLevelIdChanged();
            }
        }
        private global::System.Int32 _LevelLevelId;
        partial void OnLevelLevelIdChanging(global::System.Int32 value);
        partial void OnLevelLevelIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "UserGame", "Game")]
        public Game Game
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("InterpoolModel.UserGame", "Game").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("InterpoolModel.UserGame", "Game").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Game> GameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("InterpoolModel.UserGame", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Game>("InterpoolModel.UserGame", "Game", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InterpoolModel", "UserLevel", "Level")]
        public Level Level
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Level>("InterpoolModel.UserLevel", "Level").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Level>("InterpoolModel.UserLevel", "Level").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Level> LevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Level>("InterpoolModel.UserLevel", "Level");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Level>("InterpoolModel.UserLevel", "Level", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
